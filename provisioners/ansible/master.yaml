---
- name: Task name
  stat:
    path: /etc/sysctl.d/kube.conf
  register: kube_conf

# - name: Create directory for kube.conf
#   file:
#     path: /etc/sysctl.d
#     state: directory
#     # mode: '0755'
#   when: kubeconf.stat.exists

- name: Create file kube.conf
  file:
    path: /etc/sysctl.d/kube.conf
    state: touch
    # recurse: yes
  when: not kube_conf.stat.exists

- name: Create network bridge
  lineinfile:
    path: /etc/sysctl.d/kube.conf
    state: present
    line: "{{ item }}"
  with_items:
    - net.bridge.bridge-nf-call-ip6tables = 1
    - net.bridge.bridge-nf-call-iptables = 1
  when: not kube_conf.stat.exists

- name: Restart kubelet
  service:
    # state: restarted
    # daemon_reload: yes
    name: "{{ item }}"
    state: started
    enabled: true
  loop:
    - docker
    - kubelet

- name: Initialize Kubernetes cluster
  shell: kubeadm init --pod-network-cidr=192.168.0.0/16 >> cluster_initialized.txt
  args:
    chdir: $HOME
    creates: cluster_initialized.txt

- name: Task name
  stat:
    path: /home/vagrant/.kube/config
  register: vagrant_kube_conf

- name: Setup kubeconfig for vagrant user
  command: "{{ item }}"
  with_items:
    - mkdir -p /home/vagrant/.kube
    - cp -i /etc/kubernetes/admin.conf /home/vagrant/.kube/config
    - chown vagrant:vagrant /home/vagrant/.kube/config
    # - sudo chown $(id -u):$(id -g) $HOME/.kube/config
  when: not vagrant_kube_conf.stat.exists


# - name: Install Pod network
#   become: yes
#   become_user: vagrant
#   shell: kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/a70459be0084506e4ec919aa1c114638878db11b/Documentation/kube-flannel.yml >> pod_network_setup.txt
#   args:
#     chdir: $HOME
#     creates: pod_network_setup.txt